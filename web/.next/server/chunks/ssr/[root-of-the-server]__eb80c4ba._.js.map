{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Admin/Documents/AI-Source/web/src/contexts/AuthContext.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\n\r\ninterface User {\r\n  id: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  userType: string;\r\n  profilePicture?: string;\r\n  isActive: boolean;\r\n  isVerified: boolean;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  isAuthenticated: boolean;\r\n  isLoading: boolean;\r\n  login: (token: string, userData: User) => void;\r\n  logout: () => void;\r\n  updateUser: (userData: Partial<User>) => void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    // Check for existing auth token and user data on app load\r\n    const token = localStorage.getItem('authToken');\r\n    const userData = localStorage.getItem('user');\r\n    \r\n    if (token && userData) {\r\n      try {\r\n        const parsedUser = JSON.parse(userData);\r\n        setUser(parsedUser);\r\n      } catch (error) {\r\n        console.error('Error parsing user data:', error);\r\n        localStorage.removeItem('authToken');\r\n        localStorage.removeItem('user');\r\n      }\r\n    }\r\n    \r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const login = (token: string, userData: User) => {\r\n    localStorage.setItem('authToken', token);\r\n    localStorage.setItem('user', JSON.stringify(userData));\r\n    setUser(userData);\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('authToken');\r\n    localStorage.removeItem('user');\r\n    setUser(null);\r\n    router.push('/auth/login');\r\n  };\r\n\r\n  const updateUser = (userData: Partial<User>) => {\r\n    if (user) {\r\n      const updatedUser = { ...user, ...userData };\r\n      localStorage.setItem('user', JSON.stringify(updatedUser));\r\n      setUser(updatedUser);\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    isAuthenticated: !!user,\r\n    isLoading,\r\n    login,\r\n    logout,\r\n    updateUser,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useAuth() {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n} "],"names":[],"mappings":";;;;;AAEA;AACA;AAHA;;;;AAyBA,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,SAAS,aAAa,EAAE,QAAQ,EAAiC;IACtE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,0DAA0D;QAC1D,MAAM,QAAQ,aAAa,OAAO,CAAC;QACnC,MAAM,WAAW,aAAa,OAAO,CAAC;QAEtC,IAAI,SAAS,UAAU;YACrB,IAAI;gBACF,MAAM,aAAa,KAAK,KAAK,CAAC;gBAC9B,QAAQ;YACV,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,4BAA4B;gBAC1C,aAAa,UAAU,CAAC;gBACxB,aAAa,UAAU,CAAC;YAC1B;QACF;QAEA,aAAa;IACf,GAAG,EAAE;IAEL,MAAM,QAAQ,CAAC,OAAe;QAC5B,aAAa,OAAO,CAAC,aAAa;QAClC,aAAa,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC;QAC5C,QAAQ;IACV;IAEA,MAAM,SAAS;QACb,aAAa,UAAU,CAAC;QACxB,aAAa,UAAU,CAAC;QACxB,QAAQ;QACR,OAAO,IAAI,CAAC;IACd;IAEA,MAAM,aAAa,CAAC;QAClB,IAAI,MAAM;YACR,MAAM,cAAc;gBAAE,GAAG,IAAI;gBAAE,GAAG,QAAQ;YAAC;YAC3C,aAAa,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC;YAC5C,QAAQ;QACV;IACF;IAEA,MAAM,QAAQ;QACZ;QACA,iBAAiB,CAAC,CAAC;QACnB;QACA;QACA;QACA;IACF;IAEA,qBACE,8OAAC,YAAY,QAAQ;QAAC,OAAO;kBAC1B;;;;;;AAGP;AAEO,SAAS;IACd,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}}]
}