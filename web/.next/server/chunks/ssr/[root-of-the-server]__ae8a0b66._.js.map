{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Admin/Documents/AI-Source/web/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Admin/Documents/AI-Source/web/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Admin/Documents/AI-Source/web/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Admin/Documents/AI-Source/web/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Admin/Documents/AI-Source/web/src/components/ui/avatar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Avatar({\n  className,\n  ...props\n}: React.ComponentProps<typeof AvatarPrimitive.Root>) {\n  return (\n    <AvatarPrimitive.Root\n      data-slot=\"avatar\"\n      className={cn(\n        \"relative flex size-8 shrink-0 overflow-hidden rounded-full\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction AvatarImage({\n  className,\n  ...props\n}: React.ComponentProps<typeof AvatarPrimitive.Image>) {\n  return (\n    <AvatarPrimitive.Image\n      data-slot=\"avatar-image\"\n      className={cn(\"aspect-square size-full\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction AvatarFallback({\n  className,\n  ...props\n}: React.ComponentProps<typeof AvatarPrimitive.Fallback>) {\n  return (\n    <AvatarPrimitive.Fallback\n      data-slot=\"avatar-fallback\"\n      className={cn(\n        \"bg-muted flex size-full items-center justify-center rounded-full\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Avatar, AvatarImage, AvatarFallback }\n"],"names":[],"mappings":";;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,OAAO,EACd,SAAS,EACT,GAAG,OAC+C;IAClD,qBACE,8OAAC,kKAAA,CAAA,OAAoB;QACnB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8DACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,kKAAA,CAAA,QAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,2BAA2B;QACxC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,eAAe,EACtB,SAAS,EACT,GAAG,OACmD;IACtD,qBACE,8OAAC,kKAAA,CAAA,WAAwB;QACvB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oEACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 275, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Admin/Documents/AI-Source/web/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Tabs({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return (\n    <TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TabsList({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\"flex-1 outline-none\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,8OAAC,gKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,8OAAC,gKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uGACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,gKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mqBACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,gKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 363, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Admin/Documents/AI-Source/web/src/lib/mocks.ts"],"sourcesContent":["// Mock data for standalone UI development\r\n\r\nexport interface User {\r\n  id: string;\r\n  email: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  phoneNumber: string;\r\n  userType: 'Provider' | 'Requester' | 'Admin';\r\n  isVerified: boolean;\r\n  isActive: boolean;\r\n  profilePicture?: string;\r\n  bio?: string;\r\n  address?: string;\r\n  city?: string;\r\n  state?: string;\r\n  zipCode?: string;\r\n  country?: string;\r\n  skills?: string[];\r\n  hourlyRate?: number;\r\n  rating?: number;\r\n  reviewCount?: number;\r\n  totalEarnings?: number;\r\n  totalServices?: number;\r\n  createdAt: string;\r\n  lastLoginAt: string;\r\n}\r\n\r\nexport interface ServiceCategory {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  icon: string;\r\n  isActive: boolean;\r\n  serviceCount: number;\r\n}\r\n\r\nexport interface Service {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  categoryId: string;\r\n  categoryName: string;\r\n  providerId: string;\r\n  providerName: string;\r\n  providerAvatar?: string;\r\n  hourlyRate: number;\r\n  weeklyRate: number;\r\n  monthlyRate: number;\r\n  fixedPrice?: number;\r\n  location: string;\r\n  isAvailable: boolean;\r\n  isVerified: boolean;\r\n  rating: number;\r\n  reviewCount: number;\r\n  tags: string[];\r\n  images: string[];\r\n  createdAt: string;\r\n}\r\n\r\nexport interface ServiceRequest {\r\n  id: string;\r\n  serviceId: string;\r\n  serviceTitle: string;\r\n  requesterId: string;\r\n  requesterName: string;\r\n  requesterAvatar?: string;\r\n  providerId: string;\r\n  providerName: string;\r\n  providerAvatar?: string;\r\n  requestType: 'Hourly' | 'Weekly' | 'Monthly' | 'FixedPrice';\r\n  startDate: string;\r\n  endDate?: string;\r\n  totalAmount: number;\r\n  status: 'Pending' | 'Accepted' | 'Rejected' | 'InProgress' | 'Completed' | 'Cancelled';\r\n  description: string;\r\n  specialRequirements?: string;\r\n  location: string;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n}\r\n\r\nexport interface Contract {\r\n  id: string;\r\n  serviceId: string;\r\n  serviceTitle: string;\r\n  providerId: string;\r\n  providerName: string;\r\n  requesterId: string;\r\n  requesterName: string;\r\n  contractType: 'Hourly' | 'Weekly' | 'Monthly' | 'FixedPrice';\r\n  startDate: string;\r\n  endDate?: string;\r\n  totalAmount: number;\r\n  status: 'Pending' | 'Active' | 'Completed' | 'Cancelled';\r\n  paymentStatus: 'Pending' | 'Paid' | 'Refunded';\r\n  createdAt: string;\r\n  updatedAt: string;\r\n}\r\n\r\nexport interface Availability {\r\n  id: string;\r\n  userId: string;\r\n  dayOfWeek: number;\r\n  startTime: string;\r\n  endTime: string;\r\n  isAvailable: boolean;\r\n}\r\n\r\nexport interface Rating {\r\n  id: string;\r\n  serviceId: string;\r\n  contractId: string;\r\n  userId: string;\r\n  userName: string;\r\n  rating: number;\r\n  comment: string;\r\n  createdAt: string;\r\n}\r\n\r\nexport interface Notification {\r\n  id: string;\r\n  userId: string;\r\n  title: string;\r\n  message: string;\r\n  type: 'Info' | 'Success' | 'Warning' | 'Error';\r\n  isRead: boolean;\r\n  createdAt: string;\r\n}\r\n\r\nexport interface DashboardStats {\r\n  totalServices: number;\r\n  totalContracts: number;\r\n  totalEarnings: number;\r\n  averageRating: number;\r\n  activeContracts: number;\r\n  pendingRequests: number;\r\n  completedServices: number;\r\n  upcomingServices: number;\r\n  totalHours: number;\r\n  monthlyEarnings: number;\r\n}\r\n\r\n// Mock Users with enhanced profile information\r\nexport const mockUsers: User[] = [\r\n  {\r\n    id: '1',\r\n    email: 'admin@serviceplatform.com',\r\n    firstName: 'Admin',\r\n    lastName: 'User',\r\n    phoneNumber: '+1234567890',\r\n    userType: 'Admin',\r\n    isVerified: true,\r\n    isActive: true,\r\n    createdAt: '2024-01-01T00:00:00Z',\r\n    lastLoginAt: '2024-01-15T10:30:00Z'\r\n  },\r\n  {\r\n    id: '2',\r\n    email: 'john.doe@example.com',\r\n    firstName: 'John',\r\n    lastName: 'Doe',\r\n    phoneNumber: '+1234567891',\r\n    userType: 'Provider',\r\n    isVerified: true,\r\n    isActive: true,\r\n    profilePicture: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face',\r\n    bio: 'Professional housekeeper with 5+ years of experience. Specializing in deep cleaning and organization.',\r\n    address: '123 Main Street',\r\n    city: 'New York',\r\n    state: 'NY',\r\n    zipCode: '10001',\r\n    country: 'USA',\r\n    skills: ['Deep Cleaning', 'Organization', 'Laundry', 'Pet Care'],\r\n    hourlyRate: 25,\r\n    rating: 4.8,\r\n    reviewCount: 47,\r\n    totalEarnings: 12500,\r\n    totalServices: 89,\r\n    createdAt: '2024-01-02T00:00:00Z',\r\n    lastLoginAt: '2024-01-15T09:15:00Z'\r\n  },\r\n  {\r\n    id: '3',\r\n    email: 'jane.smith@example.com',\r\n    firstName: 'Jane',\r\n    lastName: 'Smith',\r\n    phoneNumber: '+1234567892',\r\n    userType: 'Requester',\r\n    isVerified: true,\r\n    isActive: true,\r\n    profilePicture: 'https://images.unsplash.com/photo-1494790108755-2616b612b786?w=150&h=150&fit=crop&crop=face',\r\n    address: '456 Oak Avenue',\r\n    city: 'Los Angeles',\r\n    state: 'CA',\r\n    zipCode: '90210',\r\n    country: 'USA',\r\n    createdAt: '2024-01-03T00:00:00Z',\r\n    lastLoginAt: '2024-01-15T11:45:00Z'\r\n  },\r\n  {\r\n    id: '4',\r\n    email: 'mike.wilson@example.com',\r\n    firstName: 'Mike',\r\n    lastName: 'Wilson',\r\n    phoneNumber: '+1234567893',\r\n    userType: 'Provider',\r\n    isVerified: false,\r\n    isActive: true,\r\n    bio: 'Experienced chef specializing in Italian and Mediterranean cuisine. Available for private events and meal prep.',\r\n    address: '789 Pine Street',\r\n    city: 'Chicago',\r\n    state: 'IL',\r\n    zipCode: '60601',\r\n    country: 'USA',\r\n    skills: ['Italian Cuisine', 'Mediterranean Cuisine', 'Meal Prep', 'Event Catering'],\r\n    hourlyRate: 35,\r\n    rating: 4.9,\r\n    reviewCount: 23,\r\n    totalEarnings: 8900,\r\n    totalServices: 34,\r\n    createdAt: '2024-01-04T00:00:00Z',\r\n    lastLoginAt: '2024-01-14T16:20:00Z'\r\n  },\r\n  {\r\n    id: '5',\r\n    email: 'sarah.johnson@example.com',\r\n    firstName: 'Sarah',\r\n    lastName: 'Johnson',\r\n    phoneNumber: '+1234567894',\r\n    userType: 'Requester',\r\n    isVerified: true,\r\n    isActive: true,\r\n    profilePicture: 'https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=150&h=150&fit=crop&crop=face',\r\n    address: '321 Elm Street',\r\n    city: 'Miami',\r\n    state: 'FL',\r\n    zipCode: '33101',\r\n    country: 'USA',\r\n    createdAt: '2024-01-05T00:00:00Z',\r\n    lastLoginAt: '2024-01-15T08:30:00Z'\r\n  },\r\n  {\r\n    id: '6',\r\n    email: 'david.brown@example.com',\r\n    firstName: 'David',\r\n    lastName: 'Brown',\r\n    phoneNumber: '+1234567895',\r\n    userType: 'Provider',\r\n    isVerified: true,\r\n    isActive: true,\r\n    profilePicture: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150&h=150&fit=crop&crop=face',\r\n    bio: 'Professional driver with clean record. Specializing in airport transfers and business travel.',\r\n    address: '654 Maple Drive',\r\n    city: 'Seattle',\r\n    state: 'WA',\r\n    zipCode: '98101',\r\n    country: 'USA',\r\n    skills: ['Airport Transfers', 'Business Travel', 'Luxury Vehicles', 'Long Distance'],\r\n    hourlyRate: 30,\r\n    rating: 4.7,\r\n    reviewCount: 56,\r\n    totalEarnings: 18200,\r\n    totalServices: 124,\r\n    createdAt: '2024-01-06T00:00:00Z',\r\n    lastLoginAt: '2024-01-15T12:15:00Z'\r\n  }\r\n];\r\n\r\n// Mock Service Categories\r\nexport const mockCategories: ServiceCategory[] = [\r\n  {\r\n    id: '1',\r\n    name: 'Housekeeping',\r\n    description: 'Professional cleaning and housekeeping services',\r\n    icon: '🏠',\r\n    isActive: true,\r\n    serviceCount: 15\r\n  },\r\n  {\r\n    id: '2',\r\n    name: 'Cooking',\r\n    description: 'Chef and cooking services for events and daily meals',\r\n    icon: '👨‍🍳',\r\n    isActive: true,\r\n    serviceCount: 8\r\n  },\r\n  {\r\n    id: '3',\r\n    name: 'Driving',\r\n    description: 'Professional driving and transportation services',\r\n    icon: '🚗',\r\n    isActive: true,\r\n    serviceCount: 12\r\n  },\r\n  {\r\n    id: '4',\r\n    name: 'Gardening',\r\n    description: 'Landscaping and garden maintenance services',\r\n    icon: '🌱',\r\n    isActive: true,\r\n    serviceCount: 6\r\n  },\r\n  {\r\n    id: '5',\r\n    name: 'Pet Care',\r\n    description: 'Pet sitting, walking, and grooming services',\r\n    icon: '🐕',\r\n    isActive: true,\r\n    serviceCount: 10\r\n  },\r\n  {\r\n    id: '6',\r\n    name: 'Tutoring',\r\n    description: 'Educational tutoring and academic support',\r\n    icon: '📚',\r\n    isActive: true,\r\n    serviceCount: 7\r\n  }\r\n];\r\n\r\n// Mock Services\r\nexport const mockServices: Service[] = [\r\n  {\r\n    id: '1',\r\n    title: 'Professional House Cleaning',\r\n    description: 'Comprehensive house cleaning service including dusting, vacuuming, mopping, and bathroom cleaning. Perfect for busy professionals.',\r\n    categoryId: '1',\r\n    categoryName: 'Housekeeping',\r\n    providerId: '2',\r\n    providerName: 'John Doe',\r\n    providerAvatar: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face',\r\n    hourlyRate: 25,\r\n    weeklyRate: 400,\r\n    monthlyRate: 1500,\r\n    location: 'New York, NY',\r\n    isAvailable: true,\r\n    isVerified: true,\r\n    rating: 4.8,\r\n    reviewCount: 45,\r\n    tags: ['cleaning', 'housekeeping', 'professional'],\r\n    images: [\r\n      'https://images.unsplash.com/photo-1581578731548-c64695cc6952?w=400&h=300&fit=crop',\r\n      'https://images.unsplash.com/photo-1558618666-fcd25c85cd64?w=400&h=300&fit=crop'\r\n    ],\r\n    createdAt: '2024-01-05T00:00:00Z'\r\n  },\r\n  {\r\n    id: '2',\r\n    title: 'Private Chef Services',\r\n    description: 'Experienced chef available for private events, dinner parties, and special occasions. Custom menu planning included.',\r\n    categoryId: '2',\r\n    categoryName: 'Cooking',\r\n    providerId: '2',\r\n    providerName: 'John Doe',\r\n    providerAvatar: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face',\r\n    hourlyRate: 50,\r\n    weeklyRate: 800,\r\n    monthlyRate: 3000,\r\n    location: 'Los Angeles, CA',\r\n    isAvailable: true,\r\n    isVerified: true,\r\n    rating: 4.9,\r\n    reviewCount: 32,\r\n    tags: ['chef', 'cooking', 'events'],\r\n    images: [\r\n      'https://images.unsplash.com/photo-1556909114-f6e7ad7d3136?w=400&h=300&fit=crop',\r\n      'https://images.unsplash.com/photo-1556909114-f6e7ad7d3136?w=400&h=300&fit=crop'\r\n    ],\r\n    createdAt: '2024-01-06T00:00:00Z'\r\n  },\r\n  {\r\n    id: '3',\r\n    title: 'Professional Driving Service',\r\n    description: 'Safe and reliable driving service for business meetings, airport transfers, and special events.',\r\n    categoryId: '3',\r\n    categoryName: 'Driving',\r\n    providerId: '4',\r\n    providerName: 'Mike Wilson',\r\n    providerAvatar: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150&h=150&fit=crop&crop=face',\r\n    hourlyRate: 35,\r\n    weeklyRate: 600,\r\n    monthlyRate: 2200,\r\n    location: 'Chicago, IL',\r\n    isAvailable: true,\r\n    isVerified: false,\r\n    rating: 4.5,\r\n    reviewCount: 18,\r\n    tags: ['driving', 'transportation', 'professional'],\r\n    images: [\r\n      'https://images.unsplash.com/photo-1449824913935-59a10b8d2000?w=400&h=300&fit=crop',\r\n      'https://images.unsplash.com/photo-1449824913935-59a10b8d2000?w=400&h=300&fit=crop'\r\n    ],\r\n    createdAt: '2024-01-07T00:00:00Z'\r\n  },\r\n  {\r\n    id: '4',\r\n    title: 'Garden Maintenance',\r\n    description: 'Complete garden maintenance including mowing, trimming, planting, and seasonal care.',\r\n    categoryId: '4',\r\n    categoryName: 'Gardening',\r\n    providerId: '2',\r\n    providerName: 'John Doe',\r\n    providerAvatar: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face',\r\n    hourlyRate: 30,\r\n    weeklyRate: 500,\r\n    monthlyRate: 1800,\r\n    location: 'Miami, FL',\r\n    isAvailable: true,\r\n    isVerified: true,\r\n    rating: 4.7,\r\n    reviewCount: 28,\r\n    tags: ['gardening', 'landscaping', 'maintenance'],\r\n    images: [\r\n      'https://images.unsplash.com/photo-1585320806297-9794b3e4eeae?w=400&h=300&fit=crop',\r\n      'https://images.unsplash.com/photo-1585320806297-9794b3e4eeae?w=400&h=300&fit=crop'\r\n    ],\r\n    createdAt: '2024-01-08T00:00:00Z'\r\n  },\r\n  {\r\n    id: '5',\r\n    title: 'One-Time Deep Cleaning',\r\n    description: 'Comprehensive one-time deep cleaning service for homes and offices. Includes all areas and surfaces.',\r\n    categoryId: '1',\r\n    categoryName: 'Housekeeping',\r\n    providerId: '2',\r\n    providerName: 'John Doe',\r\n    providerAvatar: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face',\r\n    hourlyRate: 0,\r\n    weeklyRate: 0,\r\n    monthlyRate: 0,\r\n    fixedPrice: 150,\r\n    location: 'New York, NY',\r\n    isAvailable: true,\r\n    isVerified: true,\r\n    rating: 4.9,\r\n    reviewCount: 67,\r\n    tags: ['cleaning', 'deep-cleaning', 'one-time'],\r\n    images: [\r\n      'https://images.unsplash.com/photo-1581578731548-c64695cc6952?w=400&h=300&fit=crop',\r\n      'https://images.unsplash.com/photo-1558618666-fcd25c85cd64?w=400&h=300&fit=crop'\r\n    ],\r\n    createdAt: '2024-01-09T00:00:00Z'\r\n  }\r\n];\r\n\r\n// Mock Service Requests\r\nexport const mockServiceRequests: ServiceRequest[] = [\r\n  {\r\n    id: '1',\r\n    serviceId: '1',\r\n    serviceTitle: 'Professional House Cleaning',\r\n    requesterId: '3',\r\n    requesterName: 'Jane Smith',\r\n    requesterAvatar: 'https://images.unsplash.com/photo-1494790108755-2616b612b786?w=150&h=150&fit=crop&crop=face',\r\n    providerId: '2',\r\n    providerName: 'John Doe',\r\n    providerAvatar: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face',\r\n    requestType: 'Hourly',\r\n    startDate: '2024-01-20T09:00:00Z',\r\n    endDate: '2024-01-20T13:00:00Z',\r\n    totalAmount: 100,\r\n    status: 'Pending',\r\n    description: 'Need weekly house cleaning service for my 2-bedroom apartment. Prefer morning hours.',\r\n    specialRequirements: 'Please bring eco-friendly cleaning products',\r\n    location: 'Los Angeles, CA',\r\n    createdAt: '2024-01-15T10:30:00Z',\r\n    updatedAt: '2024-01-15T10:30:00Z'\r\n  },\r\n  {\r\n    id: '2',\r\n    serviceId: '2',\r\n    serviceTitle: 'Private Chef Services',\r\n    requesterId: '5',\r\n    requesterName: 'Sarah Johnson',\r\n    requesterAvatar: 'https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=150&h=150&fit=crop&crop=face',\r\n    providerId: '4',\r\n    providerName: 'Mike Wilson',\r\n    providerAvatar: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150&h=150&fit=crop&crop=face',\r\n    requestType: 'FixedPrice',\r\n    startDate: '2024-01-25T18:00:00Z',\r\n    endDate: '2024-01-25T22:00:00Z',\r\n    totalAmount: 200,\r\n    status: 'Accepted',\r\n    description: 'Dinner party for 8 people. Italian cuisine preferred.',\r\n    specialRequirements: 'Vegetarian options needed for 2 guests',\r\n    location: 'Miami, FL',\r\n    createdAt: '2024-01-14T14:20:00Z',\r\n    updatedAt: '2024-01-15T09:15:00Z'\r\n  },\r\n  {\r\n    id: '3',\r\n    serviceId: '3',\r\n    serviceTitle: 'Professional Driving Service',\r\n    requesterId: '3',\r\n    requesterName: 'Jane Smith',\r\n    requesterAvatar: 'https://images.unsplash.com/photo-1494790108755-2616b612b786?w=150&h=150&fit=crop&crop=face',\r\n    providerId: '6',\r\n    providerName: 'David Brown',\r\n    providerAvatar: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150&h=150&fit=crop&crop=face',\r\n    requestType: 'Hourly',\r\n    startDate: '2024-01-22T07:00:00Z',\r\n    endDate: '2024-01-22T09:00:00Z',\r\n    totalAmount: 70,\r\n    status: 'InProgress',\r\n    description: 'Airport pickup from LAX to downtown LA.',\r\n    specialRequirements: 'Flight arrives at 6:30 AM, please arrive 15 minutes early',\r\n    location: 'Los Angeles, CA',\r\n    createdAt: '2024-01-13T16:45:00Z',\r\n    updatedAt: '2024-01-15T11:30:00Z'\r\n  },\r\n  {\r\n    id: '4',\r\n    serviceId: '4',\r\n    serviceTitle: 'Garden Maintenance',\r\n    requesterId: '5',\r\n    requesterName: 'Sarah Johnson',\r\n    requesterAvatar: 'https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=150&h=150&fit=crop&crop=face',\r\n    providerId: '2',\r\n    providerName: 'John Doe',\r\n    providerAvatar: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face',\r\n    requestType: 'Weekly',\r\n    startDate: '2024-01-23T08:00:00Z',\r\n    endDate: '2024-01-23T12:00:00Z',\r\n    totalAmount: 500,\r\n    status: 'Completed',\r\n    description: 'Weekly garden maintenance including mowing, trimming, and watering.',\r\n    specialRequirements: 'Please focus on the rose garden area',\r\n    location: 'Miami, FL',\r\n    createdAt: '2024-01-10T12:00:00Z',\r\n    updatedAt: '2024-01-15T14:20:00Z'\r\n  },\r\n  {\r\n    id: '5',\r\n    serviceId: '5',\r\n    serviceTitle: 'One-Time Deep Cleaning',\r\n    requesterId: '3',\r\n    requesterName: 'Jane Smith',\r\n    requesterAvatar: 'https://images.unsplash.com/photo-1494790108755-2616b612b786?w=150&h=150&fit=crop&crop=face',\r\n    providerId: '2',\r\n    providerName: 'John Doe',\r\n    providerAvatar: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face',\r\n    requestType: 'FixedPrice',\r\n    startDate: '2024-01-28T10:00:00Z',\r\n    endDate: '2024-01-28T16:00:00Z',\r\n    totalAmount: 150,\r\n    status: 'Pending',\r\n    description: 'Deep cleaning needed for move-out. 3-bedroom house.',\r\n    specialRequirements: 'Include carpet cleaning and window washing',\r\n    location: 'Los Angeles, CA',\r\n    createdAt: '2024-01-15T13:45:00Z',\r\n    updatedAt: '2024-01-15T13:45:00Z'\r\n  }\r\n];\r\n\r\n// Mock Availability\r\nexport const mockAvailability: Availability[] = [\r\n  // John Doe's availability\r\n  { id: '1', userId: '2', dayOfWeek: 1, startTime: '08:00', endTime: '17:00', isAvailable: true },\r\n  { id: '2', userId: '2', dayOfWeek: 2, startTime: '08:00', endTime: '17:00', isAvailable: true },\r\n  { id: '3', userId: '2', dayOfWeek: 3, startTime: '08:00', endTime: '17:00', isAvailable: true },\r\n  { id: '4', userId: '2', dayOfWeek: 4, startTime: '08:00', endTime: '17:00', isAvailable: true },\r\n  { id: '5', userId: '2', dayOfWeek: 5, startTime: '08:00', endTime: '17:00', isAvailable: true },\r\n  { id: '6', userId: '2', dayOfWeek: 6, startTime: '09:00', endTime: '15:00', isAvailable: true },\r\n  { id: '7', userId: '2', dayOfWeek: 0, startTime: '10:00', endTime: '14:00', isAvailable: false },\r\n  \r\n  // Mike Wilson's availability\r\n  { id: '8', userId: '4', dayOfWeek: 1, startTime: '10:00', endTime: '20:00', isAvailable: true },\r\n  { id: '9', userId: '4', dayOfWeek: 2, startTime: '10:00', endTime: '20:00', isAvailable: true },\r\n  { id: '10', userId: '4', dayOfWeek: 3, startTime: '10:00', endTime: '20:00', isAvailable: true },\r\n  { id: '11', userId: '4', dayOfWeek: 4, startTime: '10:00', endTime: '20:00', isAvailable: true },\r\n  { id: '12', userId: '4', dayOfWeek: 5, startTime: '10:00', endTime: '20:00', isAvailable: true },\r\n  { id: '13', userId: '4', dayOfWeek: 6, startTime: '12:00', endTime: '22:00', isAvailable: true },\r\n  { id: '14', userId: '4', dayOfWeek: 0, startTime: '12:00', endTime: '18:00', isAvailable: true },\r\n  \r\n  // David Brown's availability\r\n  { id: '15', userId: '6', dayOfWeek: 1, startTime: '06:00', endTime: '22:00', isAvailable: true },\r\n  { id: '16', userId: '6', dayOfWeek: 2, startTime: '06:00', endTime: '22:00', isAvailable: true },\r\n  { id: '17', userId: '6', dayOfWeek: 3, startTime: '06:00', endTime: '22:00', isAvailable: true },\r\n  { id: '18', userId: '6', dayOfWeek: 4, startTime: '06:00', endTime: '22:00', isAvailable: true },\r\n  { id: '19', userId: '6', dayOfWeek: 5, startTime: '06:00', endTime: '22:00', isAvailable: true },\r\n  { id: '20', userId: '6', dayOfWeek: 6, startTime: '08:00', endTime: '20:00', isAvailable: true },\r\n  { id: '21', userId: '6', dayOfWeek: 0, startTime: '08:00', endTime: '18:00', isAvailable: true }\r\n];\r\n\r\n// Enhanced Mock Contracts\r\nexport const mockContracts: Contract[] = [\r\n  {\r\n    id: '1',\r\n    serviceId: '1',\r\n    serviceTitle: 'Professional House Cleaning',\r\n    providerId: '2',\r\n    providerName: 'John Doe',\r\n    requesterId: '3',\r\n    requesterName: 'Jane Smith',\r\n    contractType: 'Hourly',\r\n    startDate: '2024-01-20T09:00:00Z',\r\n    endDate: '2024-01-20T13:00:00Z',\r\n    totalAmount: 100,\r\n    status: 'Active',\r\n    paymentStatus: 'Paid',\r\n    createdAt: '2024-01-15T10:30:00Z',\r\n    updatedAt: '2024-01-15T10:30:00Z'\r\n  },\r\n  {\r\n    id: '2',\r\n    serviceId: '2',\r\n    serviceTitle: 'Private Chef Services',\r\n    providerId: '4',\r\n    providerName: 'Mike Wilson',\r\n    requesterId: '5',\r\n    requesterName: 'Sarah Johnson',\r\n    contractType: 'FixedPrice',\r\n    startDate: '2024-01-25T18:00:00Z',\r\n    endDate: '2024-01-25T22:00:00Z',\r\n    totalAmount: 200,\r\n    status: 'Pending',\r\n    paymentStatus: 'Pending',\r\n    createdAt: '2024-01-14T14:20:00Z',\r\n    updatedAt: '2024-01-15T09:15:00Z'\r\n  },\r\n  {\r\n    id: '3',\r\n    serviceId: '3',\r\n    serviceTitle: 'Professional Driving Service',\r\n    providerId: '6',\r\n    providerName: 'David Brown',\r\n    requesterId: '3',\r\n    requesterName: 'Jane Smith',\r\n    contractType: 'Hourly',\r\n    startDate: '2024-01-22T07:00:00Z',\r\n    endDate: '2024-01-22T09:00:00Z',\r\n    totalAmount: 70,\r\n    status: 'Active',\r\n    paymentStatus: 'Paid',\r\n    createdAt: '2024-01-13T16:45:00Z',\r\n    updatedAt: '2024-01-15T11:30:00Z'\r\n  },\r\n  {\r\n    id: '4',\r\n    serviceId: '4',\r\n    serviceTitle: 'Garden Maintenance',\r\n    providerId: '2',\r\n    providerName: 'John Doe',\r\n    requesterId: '5',\r\n    requesterName: 'Sarah Johnson',\r\n    contractType: 'Weekly',\r\n    startDate: '2024-01-23T08:00:00Z',\r\n    endDate: '2024-01-23T12:00:00Z',\r\n    totalAmount: 500,\r\n    status: 'Completed',\r\n    paymentStatus: 'Paid',\r\n    createdAt: '2024-01-10T12:00:00Z',\r\n    updatedAt: '2024-01-15T14:20:00Z'\r\n  },\r\n  {\r\n    id: '5',\r\n    serviceId: '1',\r\n    serviceTitle: 'Professional House Cleaning',\r\n    providerId: '2',\r\n    providerName: 'John Doe',\r\n    requesterId: '5',\r\n    requesterName: 'Sarah Johnson',\r\n    contractType: 'Weekly',\r\n    startDate: '2024-01-16T09:00:00Z',\r\n    endDate: '2024-01-16T13:00:00Z',\r\n    totalAmount: 100,\r\n    status: 'Completed',\r\n    paymentStatus: 'Paid',\r\n    createdAt: '2024-01-10T08:00:00Z',\r\n    updatedAt: '2024-01-16T13:00:00Z'\r\n  },\r\n  {\r\n    id: '6',\r\n    serviceId: '3',\r\n    serviceTitle: 'Professional Driving Service',\r\n    providerId: '6',\r\n    providerName: 'David Brown',\r\n    requesterId: '5',\r\n    requesterName: 'Sarah Johnson',\r\n    contractType: 'Hourly',\r\n    startDate: '2024-01-18T14:00:00Z',\r\n    endDate: '2024-01-18T16:00:00Z',\r\n    totalAmount: 60,\r\n    status: 'Completed',\r\n    paymentStatus: 'Paid',\r\n    createdAt: '2024-01-12T10:00:00Z',\r\n    updatedAt: '2024-01-18T16:00:00Z'\r\n  }\r\n];\r\n\r\n// Mock Ratings\r\nexport const mockRatings: Rating[] = [\r\n  {\r\n    id: '1',\r\n    serviceId: '1',\r\n    contractId: '1',\r\n    userId: '3',\r\n    userName: 'Jane Smith',\r\n    rating: 5,\r\n    comment: 'Excellent service! John was very professional and thorough. The house looks spotless.',\r\n    createdAt: '2024-01-16T14:30:00Z'\r\n  },\r\n  {\r\n    id: '2',\r\n    serviceId: '1',\r\n    contractId: '5',\r\n    userId: '5',\r\n    userName: 'Sarah Johnson',\r\n    rating: 4,\r\n    comment: 'Good cleaning service. Very reliable and punctual.',\r\n    createdAt: '2024-01-17T10:15:00Z'\r\n  },\r\n  {\r\n    id: '3',\r\n    serviceId: '2',\r\n    contractId: '2',\r\n    userId: '5',\r\n    userName: 'Sarah Johnson',\r\n    rating: 5,\r\n    comment: 'Amazing chef! The dinner party was a huge success. Everyone loved the food.',\r\n    createdAt: '2024-01-26T20:30:00Z'\r\n  },\r\n  {\r\n    id: '4',\r\n    serviceId: '3',\r\n    contractId: '3',\r\n    userId: '3',\r\n    userName: 'Jane Smith',\r\n    rating: 4,\r\n    comment: 'Professional driver, arrived on time and got me to the airport safely.',\r\n    createdAt: '2024-01-22T09:30:00Z'\r\n  },\r\n  {\r\n    id: '5',\r\n    serviceId: '4',\r\n    contractId: '4',\r\n    userId: '5',\r\n    userName: 'Sarah Johnson',\r\n    rating: 5,\r\n    comment: 'Beautiful garden work! The roses look amazing and everything is well maintained.',\r\n    createdAt: '2024-01-23T13:45:00Z'\r\n  }\r\n];\r\n\r\n// Mock Notifications\r\nexport const mockNotifications: Notification[] = [\r\n  {\r\n    id: '1',\r\n    userId: '2',\r\n    title: 'New Service Request',\r\n    message: 'Jane Smith has requested your Professional House Cleaning service.',\r\n    type: 'Info',\r\n    isRead: false,\r\n    createdAt: '2024-01-15T10:30:00Z'\r\n  },\r\n  {\r\n    id: '2',\r\n    userId: '3',\r\n    title: 'Service Accepted',\r\n    message: 'John Doe has accepted your service request for Professional House Cleaning.',\r\n    type: 'Success',\r\n    isRead: true,\r\n    createdAt: '2024-01-15T11:00:00Z'\r\n  },\r\n  {\r\n    id: '3',\r\n    userId: '4',\r\n    title: 'Payment Received',\r\n    message: 'Payment of $200 has been received for your Private Chef Services.',\r\n    type: 'Success',\r\n    isRead: false,\r\n    createdAt: '2024-01-15T09:15:00Z'\r\n  },\r\n  {\r\n    id: '4',\r\n    userId: '5',\r\n    title: 'Service Reminder',\r\n    message: 'Your scheduled Garden Maintenance service is tomorrow at 8:00 AM.',\r\n    type: 'Warning',\r\n    isRead: false,\r\n    createdAt: '2024-01-15T08:00:00Z'\r\n  },\r\n  {\r\n    id: '5',\r\n    userId: '6',\r\n    title: 'New Review',\r\n    message: 'Jane Smith left a 4-star review for your Professional Driving Service.',\r\n    type: 'Info',\r\n    isRead: true,\r\n    createdAt: '2024-01-22T09:30:00Z'\r\n  }\r\n];\r\n\r\n// Mock Dashboard Stats\r\nexport const mockDashboardStats: DashboardStats[] = [\r\n  // John Doe (Provider)\r\n  {\r\n    totalServices: 89,\r\n    totalContracts: 67,\r\n    totalEarnings: 12500,\r\n    averageRating: 4.8,\r\n    activeContracts: 2,\r\n    pendingRequests: 1,\r\n    completedServices: 65,\r\n    upcomingServices: 3,\r\n    totalHours: 320,\r\n    monthlyEarnings: 2800\r\n  },\r\n  // Jane Smith (Requester)\r\n  {\r\n    totalServices: 0,\r\n    totalContracts: 4,\r\n    totalEarnings: 0,\r\n    averageRating: 0,\r\n    activeContracts: 2,\r\n    pendingRequests: 0,\r\n    completedServices: 2,\r\n    upcomingServices: 0,\r\n    totalHours: 0,\r\n    monthlyEarnings: 0\r\n  },\r\n  // Mike Wilson (Provider)\r\n  {\r\n    totalServices: 34,\r\n    totalContracts: 28,\r\n    totalEarnings: 8900,\r\n    averageRating: 4.9,\r\n    activeContracts: 1,\r\n    pendingRequests: 0,\r\n    completedServices: 27,\r\n    upcomingServices: 1,\r\n    totalHours: 180,\r\n    monthlyEarnings: 1200\r\n  },\r\n  // Sarah Johnson (Requester)\r\n  {\r\n    totalServices: 0,\r\n    totalContracts: 3,\r\n    totalEarnings: 0,\r\n    averageRating: 0,\r\n    activeContracts: 1,\r\n    pendingRequests: 0,\r\n    completedServices: 2,\r\n    upcomingServices: 0,\r\n    totalHours: 0,\r\n    monthlyEarnings: 0\r\n  },\r\n  // David Brown (Provider)\r\n  {\r\n    totalServices: 124,\r\n    totalContracts: 98,\r\n    totalEarnings: 18200,\r\n    averageRating: 4.7,\r\n    activeContracts: 1,\r\n    pendingRequests: 0,\r\n    completedServices: 97,\r\n    upcomingServices: 2,\r\n    totalHours: 450,\r\n    monthlyEarnings: 3200\r\n  }\r\n];\r\n\r\n// Mock Search Filters\r\nexport const mockSearchFilters = {\r\n  categories: mockCategories,\r\n  locations: [\r\n    'New York, NY',\r\n    'Los Angeles, CA',\r\n    'Chicago, IL',\r\n    'Miami, FL',\r\n    'Seattle, WA',\r\n    'Boston, MA',\r\n    'San Francisco, CA',\r\n    'Denver, CO'\r\n  ],\r\n  priceRanges: [\r\n    { label: 'Under $25', min: 0, max: 25 },\r\n    { label: '$25 - $50', min: 25, max: 50 },\r\n    { label: '$50 - $100', min: 50, max: 100 },\r\n    { label: 'Over $100', min: 100, max: null }\r\n  ],\r\n  ratings: [1, 2, 3, 4, 5],\r\n  availability: [\r\n    'Available Now',\r\n    'Available Today',\r\n    'Available This Week',\r\n    'Available Next Week'\r\n  ]\r\n}; "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1312, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Admin/Documents/AI-Source/web/src/lib/mockApi.ts"],"sourcesContent":["// Mock API service for standalone UI development\r\nimport { mockUsers, mockCategories, mockServices, mockContracts, mockRatings, mockNotifications, mockDashboardStats, mockSearchFilters, mockServiceRequests, mockAvailability } from './mocks';\r\n\r\n// Simulate API delay\r\nconst delay = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\n// Mock API responses\r\nexport const mockApi = {\r\n  // Authentication\r\n  async login(email: string, password: string) {\r\n    await delay(1000);\r\n    \r\n    const user = mockUsers.find(u => u.email === email);\r\n    if (!user || password !== 'password') {\r\n      throw new Error('Invalid email or password');\r\n    }\r\n    \r\n    return {\r\n      user,\r\n      token: 'mock-jwt-token-' + Date.now(),\r\n      expiresAt: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString()\r\n    };\r\n  },\r\n\r\n  async register(userData: any) {\r\n    await delay(1500);\r\n    \r\n    const newUser = {\r\n      id: (mockUsers.length + 1).toString(),\r\n      ...userData,\r\n      isVerified: false,\r\n      isActive: true,\r\n      createdAt: new Date().toISOString(),\r\n      lastLoginAt: new Date().toISOString()\r\n    };\r\n    \r\n    return {\r\n      user: newUser,\r\n      token: 'mock-jwt-token-' + Date.now(),\r\n      expiresAt: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString()\r\n    };\r\n  },\r\n\r\n  async forgotPassword(email: string) {\r\n    await delay(800);\r\n    return { message: 'Password reset email sent successfully' };\r\n  },\r\n\r\n  // Users\r\n  async getUsers(page = 1, limit = 10, search = '') {\r\n    await delay(500);\r\n    \r\n    let filteredUsers = mockUsers;\r\n    if (search) {\r\n      filteredUsers = mockUsers.filter(user => \r\n        user.firstName.toLowerCase().includes(search.toLowerCase()) ||\r\n        user.lastName.toLowerCase().includes(search.toLowerCase()) ||\r\n        user.email.toLowerCase().includes(search.toLowerCase())\r\n      );\r\n    }\r\n    \r\n    const start = (page - 1) * limit;\r\n    const end = start + limit;\r\n    const paginatedUsers = filteredUsers.slice(start, end);\r\n    \r\n    return {\r\n      users: paginatedUsers,\r\n      total: filteredUsers.length,\r\n      page,\r\n      limit,\r\n      totalPages: Math.ceil(filteredUsers.length / limit)\r\n    };\r\n  },\r\n\r\n  async updateUserStatus(userId: string, isActive: boolean) {\r\n    await delay(300);\r\n    const user = mockUsers.find(u => u.id === userId);\r\n    if (user) {\r\n      user.isActive = isActive;\r\n    }\r\n    return { message: 'User status updated successfully' };\r\n  },\r\n\r\n  async verifyUser(userId: string) {\r\n    await delay(300);\r\n    const user = mockUsers.find(u => u.id === userId);\r\n    if (user) {\r\n      user.isVerified = true;\r\n    }\r\n    return { message: 'User verified successfully' };\r\n  },\r\n\r\n  // Categories\r\n  async getCategories() {\r\n    await delay(300);\r\n    return mockCategories;\r\n  },\r\n\r\n  async createCategory(categoryData: any) {\r\n    await delay(500);\r\n    const newCategory = {\r\n      id: (mockCategories.length + 1).toString(),\r\n      ...categoryData,\r\n      isActive: true,\r\n      serviceCount: 0\r\n    };\r\n    return newCategory;\r\n  },\r\n\r\n  async updateCategory(id: string, categoryData: any) {\r\n    await delay(300);\r\n    const category = mockCategories.find(c => c.id === id);\r\n    if (category) {\r\n      Object.assign(category, categoryData);\r\n    }\r\n    return category;\r\n  },\r\n\r\n  async deleteCategory(id: string) {\r\n    await delay(300);\r\n    const index = mockCategories.findIndex(c => c.id === id);\r\n    if (index > -1) {\r\n      mockCategories.splice(index, 1);\r\n    }\r\n    return { message: 'Category deleted successfully' };\r\n  },\r\n\r\n  // Services\r\n  async getServices(page = 1, limit = 10, filters: any = {}) {\r\n    await delay(600);\r\n    \r\n    let filteredServices = mockServices;\r\n    \r\n    if (filters.categoryId) {\r\n      filteredServices = filteredServices.filter(s => s.categoryId === filters.categoryId);\r\n    }\r\n    \r\n    if (filters.search) {\r\n      filteredServices = filteredServices.filter(s => \r\n        s.title.toLowerCase().includes(filters.search.toLowerCase()) ||\r\n        s.description.toLowerCase().includes(filters.search.toLowerCase())\r\n      );\r\n    }\r\n    \r\n    if (filters.location) {\r\n      filteredServices = filteredServices.filter(s => \r\n        s.location.toLowerCase().includes(filters.location.toLowerCase())\r\n      );\r\n    }\r\n    \r\n    if (filters.minRating) {\r\n      filteredServices = filteredServices.filter(s => s.rating >= filters.minRating);\r\n    }\r\n    \r\n    const start = (page - 1) * limit;\r\n    const end = start + limit;\r\n    const paginatedServices = filteredServices.slice(start, end);\r\n    \r\n    return {\r\n      services: paginatedServices,\r\n      total: filteredServices.length,\r\n      page,\r\n      limit,\r\n      totalPages: Math.ceil(filteredServices.length / limit)\r\n    };\r\n  },\r\n\r\n  async getServiceById(id: string) {\r\n    await delay(300);\r\n    const service = mockServices.find(s => s.id === id);\r\n    if (!service) {\r\n      throw new Error('Service not found');\r\n    }\r\n    return service;\r\n  },\r\n\r\n  async updateServiceStatus(id: string, isVerified: boolean) {\r\n    await delay(300);\r\n    const service = mockServices.find(s => s.id === id);\r\n    if (service) {\r\n      service.isVerified = isVerified;\r\n    }\r\n    return { message: 'Service status updated successfully' };\r\n  },\r\n\r\n  // Contracts\r\n  async getContracts(page = 1, limit = 10, filters: any = {}) {\r\n    await delay(500);\r\n    \r\n    let filteredContracts = mockContracts;\r\n    \r\n    if (filters.status) {\r\n      filteredContracts = filteredContracts.filter(c => c.status === filters.status);\r\n    }\r\n    \r\n    if (filters.userId) {\r\n      filteredContracts = filteredContracts.filter(c => \r\n        c.providerId === filters.userId || c.requesterId === filters.userId\r\n      );\r\n    }\r\n    \r\n    const start = (page - 1) * limit;\r\n    const end = start + limit;\r\n    const paginatedContracts = filteredContracts.slice(start, end);\r\n    \r\n    return {\r\n      contracts: paginatedContracts,\r\n      total: filteredContracts.length,\r\n      page,\r\n      limit,\r\n      totalPages: Math.ceil(filteredContracts.length / limit)\r\n    };\r\n  },\r\n\r\n  async createContract(contractData: any) {\r\n    await delay(800);\r\n    const newContract = {\r\n      id: (mockContracts.length + 1).toString(),\r\n      ...contractData,\r\n      status: 'Pending',\r\n      paymentStatus: 'Pending',\r\n      createdAt: new Date().toISOString(),\r\n      updatedAt: new Date().toISOString()\r\n    };\r\n    return newContract;\r\n  },\r\n\r\n  async updateContractStatus(id: string, status: 'Pending' | 'Active' | 'Completed' | 'Cancelled') {\r\n    await delay(300);\r\n    const contract = mockContracts.find(c => c.id === id);\r\n    if (contract) {\r\n      contract.status = status;\r\n      contract.updatedAt = new Date().toISOString();\r\n    }\r\n    return { message: 'Contract status updated successfully' };\r\n  },\r\n\r\n  // Ratings\r\n  async getServiceRatings(serviceId: string) {\r\n    await delay(300);\r\n    return mockRatings.filter(r => r.serviceId === serviceId);\r\n  },\r\n\r\n  async createRating(ratingData: any) {\r\n    await delay(500);\r\n    const newRating = {\r\n      id: (mockRatings.length + 1).toString(),\r\n      ...ratingData,\r\n      createdAt: new Date().toISOString()\r\n    };\r\n    return newRating;\r\n  },\r\n\r\n  // Notifications\r\n  async getNotifications(userId: string) {\r\n    await delay(300);\r\n    return mockNotifications.filter(n => n.userId === userId);\r\n  },\r\n\r\n  async markNotificationAsRead(id: string) {\r\n    await delay(200);\r\n    const notification = mockNotifications.find(n => n.id === id);\r\n    if (notification) {\r\n      notification.isRead = true;\r\n    }\r\n    return { message: 'Notification marked as read' };\r\n  },\r\n\r\n  // Dashboard\r\n  async getDashboardStats() {\r\n    await delay(400);\r\n    return mockDashboardStats;\r\n  },\r\n\r\n  // Search and Filters\r\n  async getSearchFilters() {\r\n    await delay(200);\r\n    return mockSearchFilters;\r\n  },\r\n\r\n  // Enhanced Dashboard\r\n  async getDashboard(userId: string) {\r\n    await delay(800);\r\n    \r\n    const user = mockUsers.find(u => u.id === userId);\r\n    if (!user) {\r\n      throw new Error('User not found');\r\n    }\r\n\r\n    const userStats = mockDashboardStats.find(s => {\r\n      if (user.userType === 'Provider') {\r\n        return user.id === '2' || user.id === '4' || user.id === '6';\r\n      } else {\r\n        return user.id === '3' || user.id === '5';\r\n      }\r\n    }) || mockDashboardStats[0];\r\n\r\n    // Get user-specific data\r\n    let userContracts = mockContracts.filter(c => \r\n      c.providerId === userId || c.requesterId === userId\r\n    );\r\n\r\n    let userServices = mockServices.filter(s => \r\n      s.providerId === userId\r\n    );\r\n\r\n    let userServiceRequests = mockServiceRequests.filter(sr => \r\n      sr.providerId === userId || sr.requesterId === userId\r\n    );\r\n\r\n    let userAvailability = mockAvailability.filter(a => \r\n      a.userId === userId\r\n    );\r\n\r\n    return {\r\n      user,\r\n      stats: userStats,\r\n      recentContracts: userContracts.slice(0, 5),\r\n      recentServices: userServices.slice(0, 5),\r\n      serviceRequests: userServiceRequests,\r\n      availability: userAvailability\r\n    };\r\n  },\r\n\r\n  // Service Requests\r\n  async getServiceRequests(userId: string, filters: any = {}) {\r\n    await delay(500);\r\n    \r\n    let filteredRequests = mockServiceRequests.filter(sr => \r\n      sr.providerId === userId || sr.requesterId === userId\r\n    );\r\n    \r\n    if (filters.status) {\r\n      filteredRequests = filteredRequests.filter(sr => sr.status === filters.status);\r\n    }\r\n    \r\n    if (filters.type) {\r\n      filteredRequests = filteredRequests.filter(sr => sr.requestType === filters.type);\r\n    }\r\n    \r\n    return {\r\n      requests: filteredRequests,\r\n      total: filteredRequests.length\r\n    };\r\n  },\r\n\r\n  async getServiceRequestById(id: string) {\r\n    await delay(300);\r\n    const request = mockServiceRequests.find(sr => sr.id === id);\r\n    if (!request) {\r\n      throw new Error('Service request not found');\r\n    }\r\n    return request;\r\n  },\r\n\r\n  async updateServiceRequestStatus(id: string, status: string) {\r\n    await delay(300);\r\n    const request = mockServiceRequests.find(sr => sr.id === id);\r\n    if (request) {\r\n      request.status = status as any;\r\n      request.updatedAt = new Date().toISOString();\r\n    }\r\n    return { message: 'Service request status updated successfully' };\r\n  },\r\n\r\n  async createServiceRequest(requestData: any) {\r\n    await delay(500);\r\n    const newRequest = {\r\n      id: (mockServiceRequests.length + 1).toString(),\r\n      ...requestData,\r\n      createdAt: new Date().toISOString(),\r\n      updatedAt: new Date().toISOString()\r\n    };\r\n    mockServiceRequests.push(newRequest);\r\n    return newRequest;\r\n  },\r\n\r\n  // Availability Management\r\n  async getAvailability(userId: string) {\r\n    await delay(300);\r\n    return mockAvailability.filter(a => a.userId === userId);\r\n  },\r\n\r\n  async updateAvailability(userId: string, availabilityData: any[]) {\r\n    await delay(500);\r\n    // Remove existing availability for user\r\n    const existingIndexes = mockAvailability\r\n      .map((a, index) => a.userId === userId ? index : -1)\r\n      .filter(index => index !== -1);\r\n    \r\n    existingIndexes.reverse().forEach(index => {\r\n      mockAvailability.splice(index, 1);\r\n    });\r\n    \r\n    // Add new availability\r\n    availabilityData.forEach(data => {\r\n      mockAvailability.push({\r\n        id: (mockAvailability.length + 1).toString(),\r\n        userId,\r\n        ...data\r\n      });\r\n    });\r\n    \r\n    return { message: 'Availability updated successfully' };\r\n  },\r\n\r\n  // Enhanced User Profile\r\n  async getUserProfile(userId: string) {\r\n    await delay(300);\r\n    const user = mockUsers.find(u => u.id === userId);\r\n    if (!user) {\r\n      throw new Error('User not found');\r\n    }\r\n    \r\n    // Get user's services, contracts, and ratings\r\n    const userServices = mockServices.filter(s => s.providerId === userId);\r\n    const userContracts = mockContracts.filter(c => \r\n      c.providerId === userId || c.requesterId === userId\r\n    );\r\n    const userRatings = mockRatings.filter(r => {\r\n      const service = mockServices.find(s => s.id === r.serviceId);\r\n      return service?.providerId === userId;\r\n    });\r\n    \r\n    return {\r\n      user,\r\n      services: userServices,\r\n      contracts: userContracts,\r\n      ratings: userRatings\r\n    };\r\n  },\r\n\r\n  async updateUserProfile(userId: string, profileData: any) {\r\n    await delay(500);\r\n    const user = mockUsers.find(u => u.id === userId);\r\n    if (user) {\r\n      Object.assign(user, profileData);\r\n    }\r\n    return { message: 'Profile updated successfully' };\r\n  },\r\n\r\n  // Provider-specific endpoints\r\n  async getProviderDashboard(userId: string) {\r\n    await delay(800);\r\n    \r\n    const user = mockUsers.find(u => u.id === userId && u.userType === 'Provider');\r\n    if (!user) {\r\n      throw new Error('Provider not found');\r\n    }\r\n\r\n    const userStats = mockDashboardStats.find(s => {\r\n      return user.id === '2' || user.id === '4' || user.id === '6';\r\n    }) || mockDashboardStats[0];\r\n\r\n    const pendingRequests = mockServiceRequests.filter(sr => \r\n      sr.providerId === userId && sr.status === 'Pending'\r\n    );\r\n\r\n    const upcomingServices = mockServiceRequests.filter(sr => \r\n      sr.providerId === userId && (sr.status === 'Accepted' || sr.status === 'InProgress')\r\n    );\r\n\r\n    const completedServices = mockServiceRequests.filter(sr => \r\n      sr.providerId === userId && sr.status === 'Completed'\r\n    );\r\n\r\n    const userAvailability = mockAvailability.filter(a => a.userId === userId);\r\n\r\n    return {\r\n      user,\r\n      stats: userStats,\r\n      pendingRequests,\r\n      upcomingServices,\r\n      completedServices,\r\n      availability: userAvailability\r\n    };\r\n  },\r\n\r\n  // Requester-specific endpoints\r\n  async getRequesterDashboard(userId: string) {\r\n    await delay(800);\r\n    \r\n    const user = mockUsers.find(u => u.id === userId && u.userType === 'Requester');\r\n    if (!user) {\r\n      throw new Error('Requester not found');\r\n    }\r\n\r\n    const userStats = mockDashboardStats.find(s => {\r\n      return user.id === '3' || user.id === '5';\r\n    }) || mockDashboardStats[1];\r\n\r\n    const activeServices = mockServiceRequests.filter(sr => \r\n      sr.requesterId === userId && (sr.status === 'Accepted' || sr.status === 'InProgress')\r\n    );\r\n\r\n    const pastServices = mockServiceRequests.filter(sr => \r\n      sr.requesterId === userId && sr.status === 'Completed'\r\n    );\r\n\r\n    const pendingServices = mockServiceRequests.filter(sr => \r\n      sr.requesterId === userId && sr.status === 'Pending'\r\n    );\r\n\r\n    return {\r\n      user,\r\n      stats: userStats,\r\n      activeServices,\r\n      pastServices,\r\n      pendingServices\r\n    };\r\n  }\r\n};\r\n\r\n// Mock API error handler\r\nexport const handleApiError = (error: any) => {\r\n  console.error('API Error:', error);\r\n  \r\n  if (error.message) {\r\n    return { error: error.message };\r\n  }\r\n  \r\n  return { error: 'An unexpected error occurred' };\r\n};\r\n\r\n// Mock API success handler\r\nexport const handleApiSuccess = (data: any) => {\r\n  return { data, success: true };\r\n}; "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1753, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Admin/Documents/AI-Source/web/src/lib/api.ts"],"sourcesContent":["// Unified API service that can use real backend or mock data\r\nimport { mockApi } from './mockApi';\r\n\r\n// Configuration\r\nconst USE_MOCK_API = process.env.NEXT_PUBLIC_USE_MOCK_API === 'true' || !process.env.NEXT_PUBLIC_API_URL;\r\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:5000/api';\r\n\r\n// API client configuration\r\nconst apiClient = {\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n};\r\n\r\n// Get auth token from localStorage\r\nconst getAuthToken = () => {\r\n  if (typeof window === 'undefined') {\r\n    return null;\r\n  }\r\n  return localStorage.getItem('authToken');\r\n};\r\n\r\n// Add auth header to requests\r\nconst getAuthHeaders = () => {\r\n  const token = getAuthToken();\r\n  return token ? { Authorization: `Bearer ${token}` } : {};\r\n};\r\n\r\n// Generic API request function\r\nconst apiRequest = async (endpoint: string, options: RequestInit = {}) => {\r\n  const url = `${apiClient.baseURL}${endpoint}`;\r\n  const authHeaders = getAuthHeaders();\r\n  const headers: Record<string, string> = {\r\n    ...apiClient.headers,\r\n    ...(authHeaders.Authorization && { Authorization: authHeaders.Authorization }),\r\n    ...(options.headers as Record<string, string>),\r\n  };\r\n\r\n  const response = await fetch(url, {\r\n    ...options,\r\n    headers,\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json().catch(() => ({}));\r\n    throw new Error(errorData.message || `HTTP error! status: ${response.status}`);\r\n  }\r\n\r\n  return response.json();\r\n};\r\n\r\n// API service class\r\nclass ApiService {\r\n  // Authentication\r\n  async login(email: string, password: string) {\r\n    if (USE_MOCK_API) {\r\n      return mockApi.login(email, password);\r\n    }\r\n\r\n    return apiRequest('/auth/login', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ email, password }),\r\n    });\r\n  }\r\n\r\n  async register(userData: any) {\r\n    if (USE_MOCK_API) {\r\n      return mockApi.register(userData);\r\n    }\r\n\r\n    return apiRequest('/auth/register', {\r\n      method: 'POST',\r\n      body: JSON.stringify(userData),\r\n    });\r\n  }\r\n\r\n  async forgotPassword(email: string) {\r\n    if (USE_MOCK_API) {\r\n      return mockApi.forgotPassword(email);\r\n    }\r\n\r\n    return apiRequest('/auth/forgot-password', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ email }),\r\n    });\r\n  }\r\n\r\n  // Users\r\n  async getUsers(page = 1, limit = 10, search = '') {\r\n    if (USE_MOCK_API) {\r\n      return mockApi.getUsers(page, limit, search);\r\n    }\r\n\r\n    const params = new URLSearchParams({\r\n      page: page.toString(),\r\n      limit: limit.toString(),\r\n      ...(search && { search }),\r\n    });\r\n\r\n    return apiRequest(`/users?${params}`);\r\n  }\r\n\r\n  async updateUserStatus(userId: string, isActive: boolean) {\r\n    if (USE_MOCK_API) {\r\n      return mockApi.updateUserStatus(userId, isActive);\r\n    }\r\n\r\n    return apiRequest(`/users/${userId}/status`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify({ isActive }),\r\n    });\r\n  }\r\n\r\n  async verifyUser(userId: string) {\r\n    if (USE_MOCK_API) {\r\n      return mockApi.verifyUser(userId);\r\n    }\r\n\r\n    return apiRequest(`/users/${userId}/verify`, {\r\n      method: 'PUT',\r\n    });\r\n  }\r\n\r\n  // Categories\r\n  async getCategories() {\r\n    if (USE_MOCK_API) {\r\n      return mockApi.getCategories();\r\n    }\r\n\r\n    return apiRequest('/categories');\r\n  }\r\n\r\n  async createCategory(categoryData: any) {\r\n    if (USE_MOCK_API) {\r\n      return mockApi.createCategory(categoryData);\r\n    }\r\n\r\n    return apiRequest('/categories', {\r\n      method: 'POST',\r\n      body: JSON.stringify(categoryData),\r\n    });\r\n  }\r\n\r\n  async updateCategory(id: string, categoryData: any) {\r\n    if (USE_MOCK_API) {\r\n      return mockApi.updateCategory(id, categoryData);\r\n    }\r\n\r\n    return apiRequest(`/categories/${id}`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(categoryData),\r\n    });\r\n  }\r\n\r\n  async deleteCategory(id: string) {\r\n    if (USE_MOCK_API) {\r\n      return mockApi.deleteCategory(id);\r\n    }\r\n\r\n    return apiRequest(`/categories/${id}`, {\r\n      method: 'DELETE',\r\n    });\r\n  }\r\n\r\n  // Services\r\n  async getServices(page = 1, limit = 10, filters: any = {}) {\r\n    if (USE_MOCK_API) {\r\n      return mockApi.getServices(page, limit, filters);\r\n    }\r\n\r\n    const params = new URLSearchParams({\r\n      page: page.toString(),\r\n      limit: limit.toString(),\r\n      ...filters,\r\n    });\r\n\r\n    return apiRequest(`/services?${params}`);\r\n  }\r\n\r\n  async getServiceById(id: string) {\r\n    if (USE_MOCK_API) {\r\n      return mockApi.getServiceById(id);\r\n    }\r\n\r\n    return apiRequest(`/services/${id}`);\r\n  }\r\n\r\n  async updateServiceStatus(id: string, isVerified: boolean) {\r\n    if (USE_MOCK_API) {\r\n      return mockApi.updateServiceStatus(id, isVerified);\r\n    }\r\n\r\n    return apiRequest(`/services/${id}/status`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify({ isVerified }),\r\n    });\r\n  }\r\n\r\n  // Contracts\r\n  async getContracts(page = 1, limit = 10, filters: any = {}) {\r\n    if (USE_MOCK_API) {\r\n      return mockApi.getContracts(page, limit, filters);\r\n    }\r\n\r\n    const params = new URLSearchParams({\r\n      page: page.toString(),\r\n      limit: limit.toString(),\r\n      ...filters,\r\n    });\r\n\r\n    return apiRequest(`/contracts?${params}`);\r\n  }\r\n\r\n  async createContract(contractData: any) {\r\n    if (USE_MOCK_API) {\r\n      return mockApi.createContract(contractData);\r\n    }\r\n\r\n    return apiRequest('/contracts', {\r\n      method: 'POST',\r\n      body: JSON.stringify(contractData),\r\n    });\r\n  }\r\n\r\n  async updateContractStatus(id: string, status: 'Pending' | 'Active' | 'Completed' | 'Cancelled') {\r\n    if (USE_MOCK_API) {\r\n      return mockApi.updateContractStatus(id, status);\r\n    }\r\n    return apiRequest(`/contracts/${id}/status`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify({ status }),\r\n    });\r\n  }\r\n\r\n  // Ratings\r\n  async getServiceRatings(serviceId: string) {\r\n    if (USE_MOCK_API) {\r\n      return mockApi.getServiceRatings(serviceId);\r\n    }\r\n\r\n    return apiRequest(`/services/${serviceId}/ratings`);\r\n  }\r\n\r\n  async createRating(ratingData: any) {\r\n    if (USE_MOCK_API) {\r\n      return mockApi.createRating(ratingData);\r\n    }\r\n\r\n    return apiRequest('/ratings', {\r\n      method: 'POST',\r\n      body: JSON.stringify(ratingData),\r\n    });\r\n  }\r\n\r\n  // Notifications\r\n  async getNotifications(userId: string) {\r\n    if (USE_MOCK_API) {\r\n      return mockApi.getNotifications(userId);\r\n    }\r\n\r\n    return apiRequest(`/users/${userId}/notifications`);\r\n  }\r\n\r\n  async markNotificationAsRead(id: string) {\r\n    if (USE_MOCK_API) {\r\n      return mockApi.markNotificationAsRead(id);\r\n    }\r\n\r\n    return apiRequest(`/notifications/${id}/read`, {\r\n      method: 'PUT',\r\n    });\r\n  }\r\n\r\n  // Dashboard\r\n  async getDashboardStats() {\r\n    if (USE_MOCK_API) {\r\n      return mockApi.getDashboardStats();\r\n    }\r\n\r\n    return apiRequest('/admin/dashboard/stats');\r\n  }\r\n\r\n  // Search and Filters\r\n  async getSearchFilters() {\r\n    if (USE_MOCK_API) {\r\n      return mockApi.getSearchFilters();\r\n    }\r\n\r\n    return apiRequest('/services/filters');\r\n  }\r\n\r\n  // Enhanced Dashboard\r\n  async getDashboard(userId: string) {\r\n    if (USE_MOCK_API) {\r\n      return mockApi.getDashboard(userId);\r\n    }\r\n\r\n    return apiRequest(`/dashboard/${userId}`);\r\n  }\r\n\r\n  async getProviderDashboard(userId: string) {\r\n    if (USE_MOCK_API) {\r\n      return mockApi.getProviderDashboard(userId);\r\n    }\r\n\r\n    return apiRequest(`/dashboard/provider/${userId}`);\r\n  }\r\n\r\n  async getRequesterDashboard(userId: string) {\r\n    if (USE_MOCK_API) {\r\n      return mockApi.getRequesterDashboard(userId);\r\n    }\r\n\r\n    return apiRequest(`/dashboard/requester/${userId}`);\r\n  }\r\n\r\n  // Service Requests\r\n  async getServiceRequests(userId: string, filters: any = {}) {\r\n    if (USE_MOCK_API) {\r\n      return mockApi.getServiceRequests(userId, filters);\r\n    }\r\n\r\n    const params = new URLSearchParams({\r\n      userId,\r\n      ...filters,\r\n    });\r\n\r\n    return apiRequest(`/service-requests?${params}`);\r\n  }\r\n\r\n  async getServiceRequestById(id: string) {\r\n    if (USE_MOCK_API) {\r\n      return mockApi.getServiceRequestById(id);\r\n    }\r\n\r\n    return apiRequest(`/service-requests/${id}`);\r\n  }\r\n\r\n  async updateServiceRequestStatus(id: string, status: string) {\r\n    if (USE_MOCK_API) {\r\n      return mockApi.updateServiceRequestStatus(id, status);\r\n    }\r\n\r\n    return apiRequest(`/service-requests/${id}/status`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify({ status }),\r\n    });\r\n  }\r\n\r\n  async createServiceRequest(requestData: any) {\r\n    if (USE_MOCK_API) {\r\n      return mockApi.createServiceRequest(requestData);\r\n    }\r\n\r\n    return apiRequest('/service-requests', {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestData),\r\n    });\r\n  }\r\n\r\n  // Availability Management\r\n  async getAvailability(userId: string) {\r\n    if (USE_MOCK_API) {\r\n      return mockApi.getAvailability(userId);\r\n    }\r\n\r\n    return apiRequest(`/availability/${userId}`);\r\n  }\r\n\r\n  async updateAvailability(userId: string, availabilityData: any[]) {\r\n    if (USE_MOCK_API) {\r\n      return mockApi.updateAvailability(userId, availabilityData);\r\n    }\r\n\r\n    return apiRequest(`/availability/${userId}`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify({ availability: availabilityData }),\r\n    });\r\n  }\r\n\r\n  // User Profile\r\n  async getUserProfile(userId: string) {\r\n    if (USE_MOCK_API) {\r\n      return mockApi.getUserProfile(userId);\r\n    }\r\n\r\n    return apiRequest(`/users/${userId}/profile`);\r\n  }\r\n\r\n  async updateUserProfile(userId: string, profileData: any) {\r\n    if (USE_MOCK_API) {\r\n      return mockApi.updateUserProfile(userId, profileData);\r\n    }\r\n\r\n    return apiRequest(`/users/${userId}/profile`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(profileData),\r\n    });\r\n  }\r\n}\r\n\r\n// Export singleton instance\r\nexport const api = new ApiService();\r\n\r\n// Export types for use in components\r\nexport type { User, ServiceCategory, Service, Contract, Rating, Notification } from './mocks'; "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2109, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Admin/Documents/AI-Source/web/src/app/dashboard/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { \r\n  User, \r\n  Briefcase, \r\n  FileText, \r\n  Star, \r\n  DollarSign,\r\n  Clock,\r\n  MapPin,\r\n  Plus,\r\n  Search,\r\n  Calendar,\r\n  CheckCircle,\r\n  XCircle,\r\n  AlertCircle,\r\n  TrendingUp,\r\n  Users,\r\n  CalendarDays,\r\n  Settings\r\n} from \"lucide-react\";\r\nimport Link from \"next/link\";\r\nimport { api } from \"@/lib/api\";\r\n\r\ninterface ServiceRequest {\r\n  id: string;\r\n  serviceId: string;\r\n  serviceTitle: string;\r\n  requesterId: string;\r\n  requesterName: string;\r\n  requesterAvatar?: string;\r\n  providerId: string;\r\n  providerName: string;\r\n  providerAvatar?: string;\r\n  requestType: 'Hourly' | 'Weekly' | 'Monthly' | 'FixedPrice';\r\n  startDate: string;\r\n  endDate?: string;\r\n  totalAmount: number;\r\n  status: 'Pending' | 'Accepted' | 'Rejected' | 'InProgress' | 'Completed' | 'Cancelled';\r\n  description: string;\r\n  specialRequirements?: string;\r\n  location: string;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n}\r\n\r\ninterface Availability {\r\n  id: string;\r\n  userId: string;\r\n  dayOfWeek: number;\r\n  startTime: string;\r\n  endTime: string;\r\n  isAvailable: boolean;\r\n}\r\n\r\ninterface DashboardData {\r\n  user: {\r\n    id: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    userType: string;\r\n    profilePictureUrl?: string;\r\n    bio?: string;\r\n    rating?: number;\r\n    reviewCount?: number;\r\n    totalEarnings?: number;\r\n    totalServices?: number;\r\n  };\r\n  stats: {\r\n    totalServices: number;\r\n    totalContracts: number;\r\n    totalEarnings: number;\r\n    averageRating: number;\r\n    activeContracts: number;\r\n    pendingRequests: number;\r\n    completedServices: number;\r\n    upcomingServices: number;\r\n    totalHours: number;\r\n    monthlyEarnings: number;\r\n  };\r\n  pendingRequests?: ServiceRequest[];\r\n  upcomingServices?: ServiceRequest[];\r\n  completedServices?: ServiceRequest[];\r\n  activeServices?: ServiceRequest[];\r\n  pastServices?: ServiceRequest[];\r\n  availability?: Availability[];\r\n}\r\n\r\nconst dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n\r\nexport default function DashboardPage() {\r\n  const [dashboard, setDashboard] = useState<DashboardData | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [activeTab, setActiveTab] = useState(\"overview\");\r\n\r\n  useEffect(() => {\r\n    fetchDashboard();\r\n  }, []);\r\n\r\n  const fetchDashboard = async () => {\r\n    setLoading(true);\r\n    try {\r\n      // For demo purposes, we'll use a mock user ID\r\n      // In a real app, this would come from authentication context\r\n      const userId = \"2\"; // John Doe (Provider) - change to \"3\" for Jane Smith (Requester)\r\n      \r\n      let result;\r\n      if (userId === \"2\" || userId === \"4\" || userId === \"6\") {\r\n        result = await api.getProviderDashboard(userId);\r\n      } else {\r\n        result = await api.getRequesterDashboard(userId);\r\n      }\r\n      \r\n      setDashboard(result);\r\n    } catch (error) {\r\n      console.error(\"Error fetching dashboard:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getStatusBadge = (status: string) => {\r\n    switch (status) {\r\n      case \"Active\":\r\n      case \"Accepted\":\r\n        return <Badge className=\"bg-green-100 text-green-800\">Active</Badge>;\r\n      case \"Completed\":\r\n        return <Badge className=\"bg-blue-100 text-blue-800\">Completed</Badge>;\r\n      case \"Pending\":\r\n        return <Badge className=\"bg-yellow-100 text-yellow-800\">Pending</Badge>;\r\n      case \"InProgress\":\r\n        return <Badge className=\"bg-purple-100 text-purple-800\">In Progress</Badge>;\r\n      case \"Rejected\":\r\n      case \"Cancelled\":\r\n        return <Badge variant=\"destructive\">Cancelled</Badge>;\r\n      default:\r\n        return <Badge variant=\"outline\">{status}</Badge>;\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString: string) => {\r\n    return new Date(dateString).toLocaleDateString('en-US', {\r\n      weekday: 'short',\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  const formatTime = (timeString: string) => {\r\n    return new Date(`2000-01-01T${timeString}`).toLocaleTimeString('en-US', {\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!dashboard) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-4\">Welcome to Your Dashboard</h1>\r\n          <p className=\"text-gray-600 mb-8\">Get started by exploring our services or creating your profile.</p>\r\n          <div className=\"flex gap-4 justify-center\">\r\n            <Link href=\"/services\">\r\n              <Button>Browse Services</Button>\r\n            </Link>\r\n            <Link href=\"/profile\">\r\n              <Button variant=\"outline\">Complete Profile</Button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const isProvider = dashboard.user.userType === \"Provider\";\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      <div className=\"container mx-auto px-4 py-8\">\r\n        {/* Welcome Header */}\r\n        <div className=\"mb-8\">\r\n          <div className=\"flex items-center gap-4 mb-4\">\r\n            <Avatar className=\"h-16 w-16\">\r\n              <AvatarImage src={dashboard.user.profilePictureUrl} />\r\n              <AvatarFallback>\r\n                {dashboard.user.firstName[0]}{dashboard.user.lastName[0]}\r\n              </AvatarFallback>\r\n            </Avatar>\r\n            <div className=\"flex-1\">\r\n              <h1 className=\"text-3xl font-bold text-gray-900\">\r\n                Welcome back, {dashboard.user.firstName}!\r\n              </h1>\r\n              <p className=\"text-gray-600\">\r\n                {dashboard.user.userType} • {dashboard.user.email}\r\n              </p>\r\n              {dashboard.user.bio && (\r\n                <p className=\"text-sm text-gray-500 mt-1\">{dashboard.user.bio}</p>\r\n              )}\r\n            </div>\r\n            <div className=\"flex gap-2\">\r\n              <Link href=\"/profile\">\r\n                <Button variant=\"outline\" size=\"sm\">\r\n                  <User className=\"h-4 w-4 mr-2\" />\r\n                  Profile\r\n                </Button>\r\n              </Link>\r\n              {isProvider && (\r\n                <Link href=\"/availability\">\r\n                  <Button variant=\"outline\" size=\"sm\">\r\n                    <Calendar className=\"h-4 w-4 mr-2\" />\r\n                    Availability\r\n                  </Button>\r\n                </Link>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Stats Grid */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\r\n          <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <CardTitle className=\"text-sm font-medium\">\r\n                {isProvider ? \"Total Services\" : \"Total Requests\"}\r\n              </CardTitle>\r\n              <Briefcase className=\"h-4 w-4 text-blue-600\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-2xl font-bold\">{dashboard.stats.totalServices}</div>\r\n              <p className=\"text-xs text-muted-foreground\">\r\n                {isProvider ? \"Services provided\" : \"Requests made\"}\r\n              </p>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <CardTitle className=\"text-sm font-medium\">Total Contracts</CardTitle>\r\n              <FileText className=\"h-4 w-4 text-green-600\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-2xl font-bold\">{dashboard.stats.totalContracts}</div>\r\n              <p className=\"text-xs text-muted-foreground\">Completed contracts</p>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {isProvider && (\r\n            <Card>\r\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Total Earnings</CardTitle>\r\n                <DollarSign className=\"h-4 w-4 text-yellow-600\" />\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold\">${dashboard.stats.totalEarnings}</div>\r\n                <p className=\"text-xs text-muted-foreground\">Your total earnings</p>\r\n              </CardContent>\r\n            </Card>\r\n          )}\r\n\r\n          <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <CardTitle className=\"text-sm font-medium\">\r\n                {isProvider ? \"Average Rating\" : \"Active Services\"}\r\n              </CardTitle>\r\n              <Star className=\"h-4 w-4 text-purple-600\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-2xl font-bold\">\r\n                {isProvider \r\n                  ? `${dashboard.stats.averageRating.toFixed(1)}/5.0`\r\n                  : dashboard.stats.activeContracts\r\n                }\r\n              </div>\r\n              <p className=\"text-xs text-muted-foreground\">\r\n                {isProvider ? \"Your service rating\" : \"Currently active\"}\r\n              </p>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n\r\n        {/* Additional Stats for Providers */}\r\n        {isProvider && (\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\r\n            <Card>\r\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Pending Requests</CardTitle>\r\n                <AlertCircle className=\"h-4 w-4 text-orange-600\" />\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold\">{dashboard.stats.pendingRequests}</div>\r\n                <p className=\"text-xs text-muted-foreground\">Awaiting your response</p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Upcoming Services</CardTitle>\r\n                <CalendarDays className=\"h-4 w-4 text-blue-600\" />\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold\">{dashboard.stats.upcomingServices}</div>\r\n                <p className=\"text-xs text-muted-foreground\">Scheduled services</p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Monthly Earnings</CardTitle>\r\n                <TrendingUp className=\"h-4 w-4 text-green-600\" />\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold\">${dashboard.stats.monthlyEarnings}</div>\r\n                <p className=\"text-xs text-muted-foreground\">This month's earnings</p>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        )}\r\n\r\n        {/* Quick Actions */}\r\n        <Card className=\"mb-8\">\r\n          <CardHeader>\r\n            <CardTitle>Quick Actions</CardTitle>\r\n            <CardDescription>Common tasks and shortcuts</CardDescription>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n              <Link href=\"/services\">\r\n                <Button className=\"w-full flex items-center gap-2\">\r\n                  <Search className=\"h-4 w-4\" />\r\n                  Browse Services\r\n                </Button>\r\n              </Link>\r\n              {isProvider && (\r\n                <Link href=\"/services/create\">\r\n                  <Button className=\"w-full flex items-center gap-2\">\r\n                    <Plus className=\"h-4 w-4\" />\r\n                    Create Service\r\n                  </Button>\r\n                </Link>\r\n              )}\r\n              <Link href=\"/profile\">\r\n                <Button className=\"w-full flex items-center gap-2\" variant=\"outline\">\r\n                  <User className=\"h-4 w-4\" />\r\n                  Edit Profile\r\n                </Button>\r\n              </Link>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Main Content Tabs */}\r\n        <Tabs value={activeTab} onValueChange={setActiveTab} className=\"space-y-4\">\r\n          <TabsList className=\"grid w-full grid-cols-4\">\r\n            <TabsTrigger value=\"overview\">Overview</TabsTrigger>\r\n            {isProvider ? (\r\n              <>\r\n                <TabsTrigger value=\"pending\">Pending Requests</TabsTrigger>\r\n                <TabsTrigger value=\"upcoming\">Upcoming Services</TabsTrigger>\r\n                <TabsTrigger value=\"completed\">Completed Services</TabsTrigger>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <TabsTrigger value=\"active\">Active Services</TabsTrigger>\r\n                <TabsTrigger value=\"past\">Past Services</TabsTrigger>\r\n                <TabsTrigger value=\"pending\">Pending Requests</TabsTrigger>\r\n              </>\r\n            )}\r\n          </TabsList>\r\n\r\n          <TabsContent value=\"overview\" className=\"space-y-4\">\r\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n              {/* Active Contracts */}\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle className=\"flex items-center gap-2\">\r\n                    <Clock className=\"h-5 w-5\" />\r\n                    Active {isProvider ? \"Services\" : \"Requests\"} ({dashboard.stats.activeContracts})\r\n                  </CardTitle>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <p className=\"text-sm text-gray-600 mb-4\">\r\n                    You have {dashboard.stats.activeContracts} active {isProvider ? \"services\" : \"requests\"}.\r\n                  </p>\r\n                  <Link href={`/dashboard?tab=${isProvider ? \"upcoming\" : \"active\"}`}>\r\n                    <Button variant=\"outline\" size=\"sm\">\r\n                      View All {isProvider ? \"Services\" : \"Requests\"}\r\n                    </Button>\r\n                  </Link>\r\n                </CardContent>\r\n              </Card>\r\n\r\n              {/* Profile Completion */}\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle className=\"flex items-center gap-2\">\r\n                    <User className=\"h-5 w-5\" />\r\n                    Profile Status\r\n                  </CardTitle>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <div className=\"space-y-2\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <span className=\"text-sm\">Profile Picture</span>\r\n                      <Badge className=\"bg-green-100 text-green-800\">Complete</Badge>\r\n                    </div>\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <span className=\"text-sm\">Contact Information</span>\r\n                      <Badge className=\"bg-green-100 text-green-800\">Complete</Badge>\r\n                    </div>\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <span className=\"text-sm\">Verification</span>\r\n                      <Badge className=\"bg-yellow-100 text-yellow-800\">Pending</Badge>\r\n                    </div>\r\n                    {isProvider && (\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <span className=\"text-sm\">Availability</span>\r\n                        <Badge className=\"bg-green-100 text-green-800\">Set</Badge>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n\r\n            {/* Availability for Providers */}\r\n            {isProvider && dashboard.availability && (\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle className=\"flex items-center gap-2\">\r\n                    <Calendar className=\"h-5 w-5\" />\r\n                    Your Availability\r\n                  </CardTitle>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <div className=\"grid grid-cols-7 gap-2\">\r\n                    {dayNames.map((day, index) => {\r\n                      const dayAvailability = dashboard.availability?.find(a => a.dayOfWeek === index);\r\n                      return (\r\n                        <div key={day} className=\"text-center\">\r\n                          <div className=\"text-xs font-medium text-gray-600 mb-1\">{day.slice(0, 3)}</div>\r\n                          {dayAvailability ? (\r\n                            <div className={`text-xs p-1 rounded ${\r\n                              dayAvailability.isAvailable \r\n                                ? 'bg-green-100 text-green-800' \r\n                                : 'bg-gray-100 text-gray-600'\r\n                            }`}>\r\n                              {dayAvailability.isAvailable \r\n                                ? `${formatTime(dayAvailability.startTime)}-${formatTime(dayAvailability.endTime)}`\r\n                                : 'Unavailable'\r\n                              }\r\n                            </div>\r\n                          ) : (\r\n                            <div className=\"text-xs p-1 rounded bg-gray-100 text-gray-600\">\r\n                              Not Set\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            )}\r\n          </TabsContent>\r\n\r\n          {/* Provider-specific tabs */}\r\n          {isProvider && (\r\n            <>\r\n              <TabsContent value=\"pending\" className=\"space-y-4\">\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Pending Service Requests</CardTitle>\r\n                    <CardDescription>New requests awaiting your response</CardDescription>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    {dashboard.pendingRequests && dashboard.pendingRequests.length > 0 ? (\r\n                      <div className=\"space-y-4\">\r\n                        {dashboard.pendingRequests.map((request) => (\r\n                          <div key={request.id} className=\"flex items-center justify-between p-4 border rounded-lg\">\r\n                            <div className=\"flex items-center gap-4 flex-1\">\r\n                              <Avatar className=\"h-10 w-10\">\r\n                                <AvatarImage src={request.requesterAvatar} />\r\n                                <AvatarFallback>\r\n                                  {request.requesterName.split(' ').map(n => n[0]).join('')}\r\n                                </AvatarFallback>\r\n                              </Avatar>\r\n                              <div className=\"flex-1\">\r\n                                <p className=\"font-medium\">{request.serviceTitle}</p>\r\n                                <p className=\"text-sm text-gray-600\">Requested by {request.requesterName}</p>\r\n                                <p className=\"text-xs text-gray-500\">\r\n                                  {formatDate(request.startDate)} • {request.location}\r\n                                </p>\r\n                                <p className=\"text-sm text-gray-600 mt-1\">{request.description}</p>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"flex items-center gap-4\">\r\n                              <div className=\"text-right\">\r\n                                <p className=\"font-medium\">${request.totalAmount}</p>\r\n                                <p className=\"text-xs text-gray-500\">{request.requestType}</p>\r\n                              </div>\r\n                              <div className=\"flex gap-2\">\r\n                                <Button size=\"sm\" className=\"bg-green-600 hover:bg-green-700\">\r\n                                  <CheckCircle className=\"h-4 w-4 mr-1\" />\r\n                                  Accept\r\n                                </Button>\r\n                                <Button size=\"sm\" variant=\"outline\">\r\n                                  <XCircle className=\"h-4 w-4 mr-1\" />\r\n                                  Decline\r\n                                </Button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"text-center py-8\">\r\n                        <p className=\"text-gray-600\">No pending requests.</p>\r\n                      </div>\r\n                    )}\r\n                  </CardContent>\r\n                </Card>\r\n              </TabsContent>\r\n\r\n              <TabsContent value=\"upcoming\" className=\"space-y-4\">\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Upcoming Services</CardTitle>\r\n                    <CardDescription>Your confirmed and in-progress services</CardDescription>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    {dashboard.upcomingServices && dashboard.upcomingServices.length > 0 ? (\r\n                      <div className=\"space-y-4\">\r\n                        {dashboard.upcomingServices.map((service) => (\r\n                          <div key={service.id} className=\"flex items-center justify-between p-4 border rounded-lg\">\r\n                            <div className=\"flex items-center gap-4 flex-1\">\r\n                              <Avatar className=\"h-10 w-10\">\r\n                                <AvatarImage src={service.requesterAvatar} />\r\n                                <AvatarFallback>\r\n                                  {service.requesterName.split(' ').map(n => n[0]).join('')}\r\n                                </AvatarFallback>\r\n                              </Avatar>\r\n                              <div className=\"flex-1\">\r\n                                <p className=\"font-medium\">{service.serviceTitle}</p>\r\n                                <p className=\"text-sm text-gray-600\">For {service.requesterName}</p>\r\n                                <p className=\"text-xs text-gray-500\">\r\n                                  {formatDate(service.startDate)} • {service.location}\r\n                                </p>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"flex items-center gap-4\">\r\n                              <div className=\"text-right\">\r\n                                <p className=\"font-medium\">${service.totalAmount}</p>\r\n                                <p className=\"text-xs text-gray-500\">{service.requestType}</p>\r\n                              </div>\r\n                              {getStatusBadge(service.status)}\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"text-center py-8\">\r\n                        <p className=\"text-gray-600\">No upcoming services.</p>\r\n                      </div>\r\n                    )}\r\n                  </CardContent>\r\n                </Card>\r\n              </TabsContent>\r\n\r\n              <TabsContent value=\"completed\" className=\"space-y-4\">\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Completed Services</CardTitle>\r\n                    <CardDescription>Your finished services and earnings</CardDescription>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    {dashboard.completedServices && dashboard.completedServices.length > 0 ? (\r\n                      <div className=\"space-y-4\">\r\n                        {dashboard.completedServices.map((service) => (\r\n                          <div key={service.id} className=\"flex items-center justify-between p-4 border rounded-lg\">\r\n                            <div className=\"flex items-center gap-4 flex-1\">\r\n                              <Avatar className=\"h-10 w-10\">\r\n                                <AvatarImage src={service.requesterAvatar} />\r\n                                <AvatarFallback>\r\n                                  {service.requesterName.split(' ').map(n => n[0]).join('')}\r\n                                </AvatarFallback>\r\n                              </Avatar>\r\n                              <div className=\"flex-1\">\r\n                                <p className=\"font-medium\">{service.serviceTitle}</p>\r\n                                <p className=\"text-sm text-gray-600\">For {service.requesterName}</p>\r\n                                <p className=\"text-xs text-gray-500\">\r\n                                  Completed {formatDate(service.updatedAt)} • {service.location}\r\n                                </p>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"flex items-center gap-4\">\r\n                              <div className=\"text-right\">\r\n                                <p className=\"font-medium\">${service.totalAmount}</p>\r\n                                <p className=\"text-xs text-gray-500\">{service.requestType}</p>\r\n                              </div>\r\n                              {getStatusBadge(service.status)}\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"text-center py-8\">\r\n                        <p className=\"text-gray-600\">No completed services yet.</p>\r\n                      </div>\r\n                    )}\r\n                  </CardContent>\r\n                </Card>\r\n              </TabsContent>\r\n            </>\r\n          )}\r\n\r\n          {/* Requester-specific tabs */}\r\n          {!isProvider && (\r\n            <>\r\n              <TabsContent value=\"active\" className=\"space-y-4\">\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Active Services</CardTitle>\r\n                    <CardDescription>Your ongoing service requests</CardDescription>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    {dashboard.activeServices && dashboard.activeServices.length > 0 ? (\r\n                      <div className=\"space-y-4\">\r\n                        {dashboard.activeServices.map((service) => (\r\n                          <div key={service.id} className=\"flex items-center justify-between p-4 border rounded-lg\">\r\n                            <div className=\"flex items-center gap-4 flex-1\">\r\n                              <Avatar className=\"h-10 w-10\">\r\n                                <AvatarImage src={service.providerAvatar} />\r\n                                <AvatarFallback>\r\n                                  {service.providerName.split(' ').map(n => n[0]).join('')}\r\n                                </AvatarFallback>\r\n                              </Avatar>\r\n                              <div className=\"flex-1\">\r\n                                <p className=\"font-medium\">{service.serviceTitle}</p>\r\n                                <p className=\"text-sm text-gray-600\">Provided by {service.providerName}</p>\r\n                                <p className=\"text-xs text-gray-500\">\r\n                                  {formatDate(service.startDate)} • {service.location}\r\n                                </p>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"flex items-center gap-4\">\r\n                              <div className=\"text-right\">\r\n                                <p className=\"font-medium\">${service.totalAmount}</p>\r\n                                <p className=\"text-xs text-gray-500\">{service.requestType}</p>\r\n                              </div>\r\n                              {getStatusBadge(service.status)}\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"text-center py-8\">\r\n                        <p className=\"text-gray-600\">No active services.</p>\r\n                        <Link href=\"/services\">\r\n                          <Button className=\"mt-4\">Browse Services</Button>\r\n                        </Link>\r\n                      </div>\r\n                    )}\r\n                  </CardContent>\r\n                </Card>\r\n              </TabsContent>\r\n\r\n              <TabsContent value=\"past\" className=\"space-y-4\">\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Past Services</CardTitle>\r\n                    <CardDescription>Your completed service requests</CardDescription>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    {dashboard.pastServices && dashboard.pastServices.length > 0 ? (\r\n                      <div className=\"space-y-4\">\r\n                        {dashboard.pastServices.map((service) => (\r\n                          <div key={service.id} className=\"flex items-center justify-between p-4 border rounded-lg\">\r\n                            <div className=\"flex items-center gap-4 flex-1\">\r\n                              <Avatar className=\"h-10 w-10\">\r\n                                <AvatarImage src={service.providerAvatar} />\r\n                                <AvatarFallback>\r\n                                  {service.providerName.split(' ').map(n => n[0]).join('')}\r\n                                </AvatarFallback>\r\n                              </Avatar>\r\n                              <div className=\"flex-1\">\r\n                                <p className=\"font-medium\">{service.serviceTitle}</p>\r\n                                <p className=\"text-sm text-gray-600\">Provided by {service.providerName}</p>\r\n                                <p className=\"text-xs text-gray-500\">\r\n                                  Completed {formatDate(service.updatedAt)} • {service.location}\r\n                                </p>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"flex items-center gap-4\">\r\n                              <div className=\"text-right\">\r\n                                <p className=\"font-medium\">${service.totalAmount}</p>\r\n                                <p className=\"text-xs text-gray-500\">{service.requestType}</p>\r\n                              </div>\r\n                              {getStatusBadge(service.status)}\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"text-center py-8\">\r\n                        <p className=\"text-gray-600\">No past services.</p>\r\n                        <Link href=\"/services\">\r\n                          <Button className=\"mt-4\">Browse Services</Button>\r\n                        </Link>\r\n                      </div>\r\n                    )}\r\n                  </CardContent>\r\n                </Card>\r\n              </TabsContent>\r\n\r\n              <TabsContent value=\"pending\" className=\"space-y-4\">\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Pending Requests</CardTitle>\r\n                    <CardDescription>Your service requests awaiting provider response</CardDescription>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    {dashboard.pendingRequests && dashboard.pendingRequests.length > 0 ? (\r\n                      <div className=\"space-y-4\">\r\n                        {dashboard.pendingRequests.map((request) => (\r\n                          <div key={request.id} className=\"flex items-center justify-between p-4 border rounded-lg\">\r\n                            <div className=\"flex items-center gap-4 flex-1\">\r\n                              <Avatar className=\"h-10 w-10\">\r\n                                <AvatarImage src={request.providerAvatar} />\r\n                                <AvatarFallback>\r\n                                  {request.providerName.split(' ').map(n => n[0]).join('')}\r\n                                </AvatarFallback>\r\n                              </Avatar>\r\n                              <div className=\"flex-1\">\r\n                                <p className=\"font-medium\">{request.serviceTitle}</p>\r\n                                <p className=\"text-sm text-gray-600\">Requested from {request.providerName}</p>\r\n                                <p className=\"text-xs text-gray-500\">\r\n                                  {formatDate(request.startDate)} • {request.location}\r\n                                </p>\r\n                                <p className=\"text-sm text-gray-600 mt-1\">{request.description}</p>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"flex items-center gap-4\">\r\n                              <div className=\"text-right\">\r\n                                <p className=\"font-medium\">${request.totalAmount}</p>\r\n                                <p className=\"text-xs text-gray-500\">{request.requestType}</p>\r\n                              </div>\r\n                              {getStatusBadge(request.status)}\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"text-center py-8\">\r\n                        <p className=\"text-gray-600\">No pending requests.</p>\r\n                        <Link href=\"/services\">\r\n                          <Button className=\"mt-4\">Browse Services</Button>\r\n                        </Link>\r\n                      </div>\r\n                    )}\r\n                  </CardContent>\r\n                </Card>\r\n              </TabsContent>\r\n            </>\r\n          )}\r\n        </Tabs>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}}]
}